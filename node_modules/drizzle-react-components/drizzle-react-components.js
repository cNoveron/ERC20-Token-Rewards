(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["drizzle-react-components"] = factory(require("react"));
	else
		root["drizzle-react-components"] = factory(root["react"]);
})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ContractForm = exports.ContractData = exports.AccountData = undefined;

var _AccountData = __webpack_require__(2);

var _AccountData2 = _interopRequireDefault(_AccountData);

var _ContractData = __webpack_require__(3);

var _ContractData2 = _interopRequireDefault(_ContractData);

var _ContractForm = __webpack_require__(4);

var _ContractForm2 = _interopRequireDefault(_ContractForm);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.AccountData = _AccountData2.default;
exports.ContractData = _ContractData2.default;
exports.ContractForm = _ContractForm2.default;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * Create component.
 */

var AccountData = function (_Component) {
	_inherits(AccountData, _Component);

	function AccountData(props) {
		_classCallCheck(this, AccountData);

		var _this = _possibleConstructorReturn(this, (AccountData.__proto__ || Object.getPrototypeOf(AccountData)).call(this, props));

		_this.address = _this.props.drizzleState.accounts[_this.props.accountIndex];
		_this.state = { balance: 0 };
		return _this;
	}

	_createClass(AccountData, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var balance = this.props.drizzleState.accountBalances[this.address];
			this.setState({ balance: balance });
		}
	}, {
		key: 'render',
		value: function render() {
			// Use lowercase units. See https://web3js.readthedocs.io/en/1.0/web3-utils.html#fromwei.
			var units = this.props.units ? this.props.units.toLowerCase() : 'wei';
			var balance = this.props.drizzle.web3.utils.fromWei(this.state.balance.toString(), units);

			if (this.props.precision) {
				// Should there be a sanity check on the precision prop before calling?
				// e.g. precision = this.props.precision >= 0 ? this.props.precision : 3
				balance = this.precisionRound(balance, this.props.precision);
			}

			if (this.props.displayFunc) {
				return this.props.displayFunc(this.address, balance, units);
			}

			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(
					'h4',
					null,
					this.address
				),
				_react2.default.createElement(
					'p',
					null,
					balance,
					' ',
					units
				)
			);
		}
	}, {
		key: 'precisionRound',
		value: function precisionRound(number, precision) {
			var factor = Math.pow(10, precision);
			return Math.round(number * factor) / factor;
		}
	}]);

	return AccountData;
}(_react.Component);

exports.default = AccountData;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ContractData = function (_Component) {
    _inherits(ContractData, _Component);

    function ContractData(props) {
        var _this$method;

        _classCallCheck(this, ContractData);

        // Fetch initial value from chain and return cache key for reactive updates.
        var _this = _possibleConstructorReturn(this, (ContractData.__proto__ || Object.getPrototypeOf(ContractData)).call(this, props));

        _this.method = _this.props.drizzle.contracts[_this.props.contract].methods[_this.props.method];
        var methodArgs = _this.props.methodArgs ? _this.props.methodArgs : [];
        _this.state = { dataKey: (_this$method = _this.method).cacheCall.apply(_this$method, _toConsumableArray(methodArgs)) };
        return _this;
    }

    _createClass(ContractData, [{
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {
            if (this.props.methodArgs) {
                if (JSON.stringify(this.props.methodArgs) !== JSON.stringify(prevProps.methodArgs)) {
                    var _method;

                    this.setState({
                        dataKey: (_method = this.method).cacheCall.apply(_method, _toConsumableArray(this.props.methodArgs))
                    });
                }
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                drizzle = _props.drizzle,
                drizzleState = _props.drizzleState;
            // Contract is not yet intialized.

            if (!drizzleState.contracts[this.props.contract].initialized) {
                return _react2.default.createElement(
                    'span',
                    null,
                    'Initializing...'
                );
            }

            // If the cache key we received earlier isn't in the store yet; the initial value is still being fetched.
            if (!(this.state.dataKey in drizzleState.contracts[this.props.contract][this.props.method])) {
                return null;
            }
            // Show a loading spinner for future updates.
            var pendingSpinner = drizzleState.contracts[this.props.contract].synced ? '' : ' 🔄';

            // Optionally hide loading spinner (EX: ERC20 token symbol).
            if (this.props.hideIndicator) {
                pendingSpinner = '';
            }
            var displayData = drizzleState.contracts[this.props.contract][this.props.method][this.state.dataKey].value;

            if (displayData instanceof Object) {
                displayData = Object.values(displayData);
            }
            if (this.props.displayFunc) {
                return this.props.displayFunc(displayData);
            }
            // Need to convert on an per-item basis for Objects/arrays.
            // Optionally convert to UTF8
            if (this.props.toUtf8) {
                displayData = drizzle.web3.utils.hexToUtf8(displayData);
            }

            // Optionally convert to Ascii
            if (this.props.toAscii) {
                displayData = drizzle.web3.utils.hexToAscii(displayData);
            }
            if (displayData instanceof Array) {
                var displayListItems = displayData.map(function (datum, i) {
                    return _react2.default.createElement(
                        'li',
                        { key: i },
                        datum,
                        pendingSpinner
                    );
                });
                return _react2.default.createElement(
                    'ul',
                    null,
                    displayListItems
                );
            }

            return _react2.default.createElement(
                'span',
                null,
                displayData,
                pendingSpinner
            );
        }
    }]);

    return ContractData;
}(_react.Component);

exports.default = ContractData;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*
 * Create component.
 */

var ContractForm = function (_Component) {
  _inherits(ContractForm, _Component);

  function ContractForm(props) {
    _classCallCheck(this, ContractForm);

    var _this = _possibleConstructorReturn(this, (ContractForm.__proto__ || Object.getPrototypeOf(ContractForm)).call(this, props));

    _this.handleInputChange = _this.handleInputChange.bind(_this);
    _this.handleSubmit = _this.handleSubmit.bind(_this);

    // Get the contract ABI
    var abi = _this.props.drizzle.contracts[_this.props.contract].abi;

    _this.inputs = [];
    var initialState = {};

    // Iterate over abi for correct function.
    for (var i = 0; i < abi.length; i++) {
      if (abi[i].name === _this.props.method) {
        _this.inputs = abi[i].inputs;

        for (var j = 0; j < _this.inputs.length; j++) {
          initialState[_this.inputs[j].name] = '';
        }

        break;
      }
    }

    _this.state = initialState;
    return _this;
  }

  _createClass(ContractForm, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'form',
        { className: 'pure-form pure-form-stacked' },
        _react2.default.createElement(
          'strong',
          null,
          !this.props.hideMethod ? this.props.method + ': ' : null
        ),
        this.inputs.map(function (input, index) {
          var inputType = _this2.translateType(input.type);
          var inputLabel = _this2.props.labels ? _this2.props.labels[index] : input.name;
          return _react2.default.createElement('input', { key: input.name, type: inputType, name: input.name, value: _this2.state[input.name], placeholder: inputLabel, onChange: _this2.handleInputChange });
        }),
        _react2.default.createElement(
          'button',
          { key: 'submit', className: 'pure-button', type: 'button', onClick: this.handleSubmit },
          'Submit'
        )
      );
    }
  }, {
    key: 'handleSubmit',
    value: function handleSubmit() {
      var _this3 = this,
          _props$drizzle$contra2;

      // If an input is of type bytes32 then convert the entered text to hex, if it isn't already valid hex, using web3.
      var values = this.inputs.map(function (input, i) {
        if (input.type === 'bytes32' && !_this3.props.drizzle.web3.utils.isHex(_this3.state[input.name])) {
          return _this3.props.drizzle.web3.utils.toHex(_this3.state[input.name]);
        } else {
          return _this3.state[input.name];
        }
      });

      if (this.props.sendArgs) {
        var _props$drizzle$contra;

        return (_props$drizzle$contra = this.props.drizzle.contracts[this.props.contract].methods[this.props.method]).cacheSend.apply(_props$drizzle$contra, _toConsumableArray(values).concat([this.props.sendArgs]));
      }

      (_props$drizzle$contra2 = this.props.drizzle.contracts[this.props.contract].methods[this.props.method]).cacheSend.apply(_props$drizzle$contra2, _toConsumableArray(values));
    }
  }, {
    key: 'handleInputChange',
    value: function handleInputChange(event) {
      this.setState(_defineProperty({}, event.target.name, event.target.value));
    }
  }, {
    key: 'translateType',
    value: function translateType(type) {
      switch (true) {
        case /^uint/.test(type):
          return 'number';
        case /^string/.test(type) || /^bytes/.test(type):
          return 'text';
        case /^bool/.test(type):
          return 'checkbox';
        default:
          return 'text';
      }
    }
  }]);

  return ContractForm;
}(_react.Component);

exports.default = ContractForm;

/***/ })
/******/ ]);
});